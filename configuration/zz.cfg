; * zzform module
; * $zz keys
; *
; * Part of »Zugzwang Project«
; * https://www.zugzwang.org/modules/zzform
; *
; * @author Gustaf Mossakowski <gustaf@koenige.org>
; * @copyright Copyright © 2023 Gustaf Mossakowski
; * @license http://opensource.org/licenses/lgpl-3.0.html LGPL-3.0
; 

[access]
description = "allows to restrict access to main record, like $zz['fields'][n]['access'] to subtables"
enum[] = 
enum[] = all
enum[] = add_only
enum[] = edit_only
enum[] = edit_details_and_add
enum[] = edit_details_only
enum[] = forbidden
enum[] = none
enum[] = search_but_no_list
enum[] = show
enum[] = show_and_add
enum[] = show_and_delete
enum[] = show_edit_add

[add]
description = ""
list = 1

[add_details_return_field]
type = field_name

[add_from_source_id]
description = "Allows to add from source_id even if the access to that ID is restricted by a $zz['where'] or $_GET['where']"
type = bool

[class]

[conditions]
description = ""
list = 1

[details]
description = ""
list = 1

[dont_show_h1]
description = "if set to true, h1 will not be shown"
type = bool

[dynamic_referer]
deprecated = 1
moved_to_zz = "page[dynamic_referer]"

[explanation]
description = "Textblock after heading"

[explanation_insert]
description = "Textblock after heading, only in insert mode"

[export]
description = "list of possible export modes"
list = 1
enum[] = CSV
enum[] = CSV Excel

[export_no_html]
description = ""
bool = 1

[fields]
description = "list of fields per record"
list = 1

[filter]
description = "Filter for records to be shown"
list = 1

[filter_active]
list = 1
scope[] = internal

[folder]
description = "list with root, string, field, mode for a folder that must be renamed/deleted after changing the record"
list = 1

[footer]
list = 1

["footer[template]"]

["footer[text]"]

["footer[text_insert]"]

[geo_map_html]
description = " if set, zzbrick/forms module will include a javascript map (e. g. OpenLayers) to display the records via a KML export on this map; a map template and a JavaScript-library is required"
type = template

[geo_map_head]
description = ""
type = template

[geo_map_export]
description = ""
type = enum
enum[] = geojson
enum[] = kml

[hooks]
description = "hook functions"
list = 1
no_init = 1

["hooks[after_delete]"]
description = "hook function called after a successful delete"
type = function
list = 1

["hooks[after_insert]"]
description = "hook function called after a successful insert"
type = function
list = 1

["hooks[after_update]"]
description = "hook function called after a successful update"
type = function
list = 1

["hooks[after_upload]"]
description = "hook function called after upload is checked, before validation"
type = function
list = 1

["hooks[after_validation]"]
description = "hook function called after record was validated"
type = function
list = 1

["hooks[before_delete]"]
description = "hook function called before a delete attempt"
type = function
list = 1

["hooks[before_insert]"]
description = "hook function called before an insert attempt"
type = function
list = 1

["hooks[before_update]"]
description = "hook function called before an update attempt"
type = function
list = 1

["hooks[before_upload]"]
description = "hook function called before upload is checked"
list = 1

[if]
list = 1

[init_ignore_log]
description = "keys to ignore for log of unused defintion keys if definition is initalised"
list = 1

[list]
description = "list view definitions"
type = list
list = 1
no_init = 1

["list[add]"]
description = "allows to add a new record"
type = bool
default = 1
scope[] = internal

["list[buttons]"]
description = "HTML code for submit buttons for several actions below list"
list = 1
scope[] = internal

["list[columns]"]
description = "definition of all table columns"
type = list
list = 1
scope[] = internal

["list[current_record]"]
description = "ID of currently shown record"
type = int
scope[] = internal

["list[current_records]"]
description = "IDs of activated records"
type = int
list = 1
scope[] = internal

["list[details]"]
description = "don't show a table head for link to details until necessary"
type = bool
scppe[] = internal

["list[display]"]
description = "how the tabular data is displayed"
type = enum
enum[] = table
enum[] = ul
enum[] = csv
enum[] = csv-excel
enum[] = pdf
enum[] = kml
enum[] = geojson
enum[] = zip
enum[] = 
default = table

["list[dnd]"]
description = "use drag and drop in list view to change sort order of records"
type = bool

["list[dnd_id_field]"]
description = "ID field name in table that saves the sort order"
type = field_name

["list[dnd_sequence_field]"]
description = "field name in table where the new sort order is saved"
type = field_name

["list[dnd_start]"]
description = "starting value, if records spawn over several pages"
type = int
scope[] = internal

["list[dnd_target_url]"]
description = "URL that is called via XHR to change order of records"
type = url

["list[dont_check_records]"]
description = "marker that records should not be marked as checked anymore after e. g. a merge operation"
type = bool
scope[] = internal

["list[extra_cols]"]
description = "definition of additional table columns"
type = list
list = 1
scope[] = internal

["list[group]"]
description = "list of field names that records in list view use for grouping"
type = field_name
list = 1

["list[group_titles]"]
description = "HTML code for group titles"
list = 1
scope[] = internal

["list[group_field_no]"]
list = 1
scope[] = internal

["list[hide_columns_if_empty]"]
description = "check all columns in list and hide columns if they are empty, behaviour is equivalent to 'hide_in_list_if_empty' on a per field basis"
type = bool

["list[hide_empty_table]"]
description = "do not show message that there are no records if there are none"
type = bool

["list[hierarchy]"]
description = "show list with hierarchy"
type = list
list = 1
no_init = 1

["list[hierarchy][display_in]"]
description = "display hierarchy in this field, i. e. this field gets indented"
type = field_name

["list[hierarchy][hide_top_value]"]
description = "do not show uppermost value in list, just subtree"
type = bool

["list[hierarchy][id]"]
description = "top ID value if just a subset of the records are shown"
type = int

["list[hierarchy][id_field_name]"]
description = "ID field name "
type = field_name
scope[] = internal

["list[hierarchy][mother_id_field_name]"]
description = "main ID field name"
type = field_name

["list[merge]"]
description = "allow to merge records"
type = bool

["list[modes]"]
description = "don’t show a table head for link to modes until necessary"
type = bool
scppe[] = internal

["list[multi_delete]"]
description = "allow to delete multiple records"
type = bool
scope[] = experimental

["list[multi_edit]"]
description = "allow to edit multiple records"
type = bool
scope[] = experimental

["list[multi_function]"]
description = "allow to call a function on several records at one"
type = list
list = 1

["list[multi_function][][function]"]
description = "function name"
type = function
no_auto_init = 1

["list[multi_function][][title]"]
description = "HTML: title of button"
no_auto_init = 1

["list[no_add_above]"]
description = "never show link above list to add a new record"
type = bool

["list[select_multiple_records]"]
description = "internal marker that multiple records can be selected, e. g. for multi_function or merge"
type = bool
scope[] = internal

["list[sum]"]
description = "sums per column"
type = list
list = 1
scope[] = internal

["list[sum_group]"]
description = "sums per group per column"
type = list
list = 1
scope[] = internal

["list[tfoot]"]
description = "shows table foot, e. g. for sums of individual values"
type = bool

[page]
description = ""
list = 1
no_init = 1

["page[breadcrumbs]"]
list = 1

["page[dont_show_title_as_breadcrumb]"]
description = ""
type = bool

["page[dynamic_referer]"]
description = "referer which links back to previous page, overwrites $zz_conf['referer'] and must be array with field1, string1 etc."
list = 1

["page[extra]"]
description = "list of variables that can be used in page template via extra_{key}"
list = 1

["page[head]"]
type = html

["page[link]"]
list = 1

["page[meta]"]
description = "set meta tags for webpage"
list = 1

["page[query_strings]"]
list = 1

["page[referer]"]
description = ""

["page[request]"]
description = "list of request functions that are called after record form/list is created"
list = 1
type = function

["page[title]"]
description = "page title, set inside zzform"

[record]
description = ""
list = 1
no_init = 1

["record[action]"]
description = ""
enum[] = delete
enum[] = insert
enum[] = multiple
enum[] = review
enum[] = update
enum[] = thumbnails
scope[] = internal

["record[add]"]
description = "add or do not add data"
type = bool
default = 1

["record[always_show_empty_detail_record]"]
description = ""
type = bool

["record[cancel_link]"]
description = ""
type = bool
default = 1

["record[copy]"]
description = "show action: copy"
type = bool

["record[delete]"]
description = "show action: delete"
type = bool
default = 1

["record[edit]"]
description = "show action: edit"
type = bool
default = 1

["record[form_anchor]"]
description = "anchor (#id) for form, if needed"

["record[form_lead]"]
description = "Markdown code for HTML block directly after form heading"

["record[no_ok]"]
description = ""
type = bool

["record[no_timeframe]"]
description = ""
type = bool

["record[query_records]"]
description = ""
type = bool

["record[redirect_to_referer_zero_records]"]
description = ""
type = bool

["record[redirect]"]
description = ""
list = 1

["record[redirect][successful_delete]"]
description = ""

["record[redirect][successful_insert]"]
description = ""

["record[redirect][successful_update]"]
description = ""

["record[save_old_record]"]
description = "key: int, value: $no"
list = 1
scope[] = internal

["record[subtables]"]
description = "save number of subtables, key: $tab, value: $no or $no-$subno"
list = 1

["record[view]"]
description = "show action: view"
type = bool

["record[upload_form]"]
description = "false: no upload, true: upload possible"
type = bool
scope[] = internal

["record[where]"]
description = ""
list = 1
scope[] = internal

["record[zz_fields]"]
description = ""
list = 1
scope[] = internal

[request]
deprecated = 1
moved_to_zz = "page[request]"

[revisions]
type = bool

[revision_hooks]
type = bool
scope[] = internal

[revisions_only]
type = bool

[set_redirect]
description = "list of redirects that will be added to the database redirects table if an identifier is updated or a record with an identifier is deleted. Might be list of strings (old and new pattern is equal), list of arrays (old and new patterns differ); field_name may be set optionally if more than one identifier is in the field list."
list = 1

[sql]
description = "SQL statement for list display and to get field values for form display"
type = query

[sqlcount]
description = "separate SQL query for counting records if main query is too heavy"
type = query

[sqlextra]
description = "if SQL query is too complex, additional values can be read via 'sqlextra' queries"
type = query
list = 1

[sqlorder]
description = "SQL statement, part must begin with ' ORDER BY', to sort database table"
type = query

[sqlrecord]
description = "SQL query which will be used only for record view, not for list view, use `sql` if not set"
type = query

[sql_association]
type = query

[sql_translate]
description = "Allows translation for this table (or key => table or list of tables or keys and tables) with wrap_translate()"
list = 1

[sql_without_limit]
type = query
scope[] = internal

[sql_without_where]
type = query
description = ""
scope[] = internal

[subselect]
description = ""
list = 1
no_init = 1

["subselect[concat_fields]"]
description = ""

["subselect[concat_rows]"]
description = ""

["subselect[dont_mark_search_string]"]
description = ""
type = bool

["subselect[export_no_html]"]
description = ""
type = bool

["subselect[field_prefix]"]
description = ""
list = 1

["subselect[field_suffix]"]
description = ""
list = 1

["subselect[list_field_format]"]

["subselect[prefix]"]
description = ""

["subselect[sql]"]
description = ""
type = query

["subselect[sql_ignore]"]
description = ""
list = 1

["subselect[sql_translate]"]
description = ""
list = 1

["subselect[suffix]"]
description = ""

[subtitle]
description = ""
list = 1

[table]
description = "Name of database table (might include database name as well, e. g. Database.Table)"

[table_for_where]

[title]
description = "optional: h1-heading to be used for form instead of $zz['table']"

[triggers]
list = 1

[unique]
description = "describes UNIQUE key for detail tables. For updates via zzform_multi() which do not know the record ID of the detail table this can be used to avoid getting this ID first."
list = 1
type = field_name

[unique_ignore_null]
type = bool

[unless]
list = 1

[vars]
description = "variables for internal use inside zzform, later available via wrap_static('zzform')"
list = 1

[where]
description = "WHERE condition for record, like via URL where[some_id]=10"
list = 1

[where_condition]
list = 1
scope[] = internal
no_init = 1

["where_condition[list+record]"]
list = 1
scope[] = internal

["where_condition[record]"]
list = 1
scope[] = internal
