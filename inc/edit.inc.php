<?php 

/*

zzform

This script (c) Copyright 2004-2006 Gustaf Mossakowski, gustaf@koenige.org
No use without permission. The use of this product is restricted
to what has been agreed on in written or spoken form beforehands. If nothing 
has been explicitly said about the use, these scripts may not be used for a
different database than originally intended.
*/

//	Required Variables, global so they can be used by the including script after
//	processing as well

global $zz;			// Table description
global $zz_conf;	// Config variables
global $zz_tab;		// Table values, generated by zzform()
global $zz_page;	// Page (Layout) variables

function zzform() {
	$zz_timer = microtime_float();
	global $zz;			// Table description
	global $zz_conf;	// Config variables
	global $zz_tab;		// Table values, generated by zzform()
	global $zz_page;	// Page (Layout) variables

	$zzform = true; // This variable signals that zz_form is included
	if (empty($zz_conf['zzform_calls'])) $zz_conf['zzform_calls'] = 1;
	else $zz_conf['zzform_calls']++;
	
//	Variables which are required by several functions
	global $zz_error;
	global $text;
	global $zzform;

//	Default Configuration

//	initialize variables
	$zz_error = array();
	$upload_form = false;
	$zz['result'] = false;
	$zz['headers'] = false;
	$zz['output'] = false;

//	allowed parameters
	$zz_allowed_params['mode'] = array('edit', 'delete', 'show', 'add', 'review');

//	Core defaults and functions
	$zz_default['character_set']	= 'utf-8';					// character set
	$zz_default['debug']			= false;					// turn on/off debugging mode
	$zz_default['debug_allsql']		= false;	
	$zz_default['dir_ext']			= $zz_conf['dir'].'/ext';	// directory for extensions
	$zz_default['ext_modules']		= array('markdown', 'textile');
	foreach (array_keys($zz_default) as $key)					// create conf from defaults
		if (!isset($zz_conf[$key])) 
			$zz_conf[$key] = $zz_default[$key];
	require_once($zz_conf['dir'].'/inc/editfunc.inc.php');		// include core functions
	
	if ($zz_conf['debug'] && $zz_conf['zzform_calls'] > 1) {
		$zz_error[]['msg'] = 'zzform has been called as a function more than once. You might want to check if this is correct.';
		$zz['output'] .= zz_error($zz_error);
	}


//	set mode
	$zz['mode'] = (!empty($_GET['mode']) && in_array($_GET['mode'], $zz_allowed_params['mode'])) 
		? $_GET['mode'] : false;

//	Modules
	// todo: include modules geo and upload only if corresponding fields are defined, 
	// see $upload_form as a way how to do that.
	$int_modules = array('geo', 'validate', 'export', 'compatibility', 'upload');
	$int_modules = zz_add_modules($int_modules, $zz_conf['dir'].'/inc', $zz_conf);
	$ext_modules = zz_add_modules($zz_conf['ext_modules'], $zz_conf['dir_ext'], $zz_conf);
	$zz_conf['modules'] = $int_modules['modules'];
	foreach ($int_modules['vars'] as $index => $var)			// import variables from internal modules
		if (is_array($var)) $$index = array_merge($$index, $var);

	$zz_conf['ext_modules'] = $ext_modules['modules'];
		
	$zz_conf['selection'] 			= false;
	$zz_default['group']			= false;
	$zz_conf['group_field_no']		= false;
	
	$zz_default['export']			= false;	// 						
	$zz_default['view']				= false;	// 						show Action: View
	$zz_default['delete']			= false;	// $delete				show Action: Delete
	$zz_default['edit']				= true;		// 						show Action: Edit
	$zz_default['add']				= true;		// $add					show Add new record
	$zz_default['show_list']		= true;		// $tabelle				nur bearbeiten möglich, keine Tabelle
	$zz_default['list_display']		= 'table';
	$zz_default['search'] 			= false;	// $editvar['search']	Suchfunktion am Ende des Formulars ja/nein
	$zz_default['backlink']			= true;		// $backlink			show back-to-overview link
	$zz_default['tfoot']			= false;  	// $tfoot				Tabellenfuss
	$zz_default['show_output']		= true;		// $show_output			standardmaessig wird output angezeigt
	$zz_default['multilang_fieldnames'] = false;	// $multilang_fieldnames translate fieldnames via $text[$fieldname]
	$zz_default['limit']			= false;	// $limit				only n records are shown at once
	$zz_default['this_limit']		= false;	// internal value, current range which records are shown
	$zz_default['limit_show_range'] = 800;		// range in which links to records around current selection will be shown
	$zz_default['do_validation']	= true;	// $do_validation		left over from old edit.inc, for backwards compatiblity
	$zz_default['rootdir']			= $_SERVER['DOCUMENT_ROOT'];		//Root Directory
	$zz_default['max_detail_records'] = 20;		// max 20 detail records, might be expanded later on
	$zz_default['min_detail_records'] = 0;		// min 0 detail records, might be expanded later on
	$zz_default['relations_table'] 	= '_relations';	//	name of relations table for referential integrity
	$zz_default['logging'] 			= false;	//	if logging should occur, turned off by default 
	$zz_default['logging_table'] 	= '_logging';	//	name of table where INSERT, DELETE and UPDATE actions will be logged
	$zz_default['prefix'] 			= false;	//	prefix for ALL tables like zz_
	$zz_default['max_select'] 		= 60;		//	maximum entries in select/option, if bigger than sub-select
	$zz_default['user']				= '';	// character set
	$zz_default['project']			= $_SERVER['SERVER_NAME'];
	$zz_default['show_hierarchy']	= false;
	$zz_default['error_mail_to']	= false;
	$zz_default['error_mail_from']	= false;
	$zz_default['error_handling']	= 'output';
	$zz_default['action_dir']		= $zz_conf['dir'].'/local';			// directory for included scripts after action has been taken
	$zz_default['details_base']		= false;
	$zz_default['details_target']	= false;							// target-window for details link
	$zz_default['details_referer']	= true;								// add referer to details link
	$zz_default['additional_text']	= false;
	$zz_default['lang_dir']			= $zz_conf['dir'].'/local';			// directory for additional text
	$zz_default['access']			= 'all';			// edit_only, add_only, show
//	$zz_default['tmp_dir']			= 
	$zz_default['max_select_val_len']	= 60;		// maximum length of values in select
	$zz_default['footer_text']		= false;		// text at the end of all
	$zz_default['redirect']['successful_update'] = false;	// redirect to diff. page after update
	$zz_default['redirect']['successful_insert'] = false;	// redirect to diff. page after insert
	$zz_default['redirect']['successful_delete'] = false;	// redirect to diff. page after delete

	foreach (array_keys($zz_default) as $key)
		if (!isset($zz_conf[$key])) $zz_conf[$key] = $zz_default[$key];
	
	if (!isset($zz_conf['url_self'])) {
		$zz_conf['url_self'] = parse_url($_SERVER['REQUEST_URI']);
		$zz_conf['url_self'] = $zz_conf['url_self']['path'];
	}
	$zz_var['url_append'] ='?';
	$test_url_self = parse_url($zz_conf['url_self']);
	if (!empty($test_url_self['query'])) $zz_var['url_append'] ='&amp;';
	if (!$zz_conf['this_limit'] && $zz_conf['limit']) 
		$zz_conf['this_limit'] = $zz_conf['limit'];

	if (isset($_GET['nolist'])) $zz_conf['show_list'] = false;

	if ($zz_conf['debug']) 
		$zz['output'] .= zz_show_microtime('Variablen', $zz_timer);

//	Required files
	
	require_once($zz_conf['dir'].'/inc/editform.inc.php');			// Form
	if ($zz_conf['show_list'])
		require_once($zz_conf['dir'].'/inc/edittab.inc.php');		// Table output with all records
	require_once($zz_conf['dir'].'/inc/editrecord.inc.php');		// update/delete/insert
	require_once($zz_conf['dir'].'/inc/editval.inc.php');			// Basic Validation
	require($zz_conf['dir'].'/inc/text-en.inc.php');				// English text
	if ($zz_conf['additional_text'] AND file_exists($langfile = $zz_conf['lang_dir'].'/text-en.inc.php')) 
		include $langfile; // must not be include_once since $text is cleared beforehands

	if (in_array('upload', $zz_conf['modules']) && $zz_conf['modules']['upload'])
		if ($zz_conf['upload_MAX_FILE_SIZE'] > $zz_conf['upload_ini_max_filesize']) {
			$zz_error[]['msg'] = 'Value for upload_max_filesize from php.ini is smaller than value which is set in the script. The value from php.ini will be used. To upload bigger files, please adjust your configuration settings.';
			$zz_conf['upload_MAX_FILE_SIZE'] = $zz_conf['upload_ini_max_filesize'];
		}
	
//	Optional files
	if (isset($zz_conf['language']) && $zz_conf['language'] != 'en') {	// text in other languages
		$langfile = $zz_conf['dir'].'/inc/text-'.$zz_conf['language'].'.inc.php';
		if (file_exists($langfile)) include($langfile);
		else {
			$zz_error[] = array(
				'level' => 'warning',
				'msg' => 'No language file for <strong>'.$zz_conf['language'].'</strong> found. Using English instead.',
				'type' => 'config');
		}
		if ($zz_conf['additional_text'] AND file_exists($langfile = $zz_conf['lang_dir'].'/text-'.$zz_conf['language'].'.inc.php')) {
			include $langfile; // must not be include_once since $text is cleared beforehands
		}
	}
	// todo: if file exists else lang = en
	if (!isset($zz_conf['db_connection'])) include_once ($zz_conf['dir'].'/local/db.inc.php');
	// get db_name.
	// 1. best way: put it in zz_conf['db_name']
	if (!empty($zz_conf['db_name'])) {
		$dbname = mysql_select_db($zz_conf['db_name']);
		if (!$dbname) $zz_error[]['msg'] = mysql_error();
	// 2. alternative: put it in zz['table']
	} elseif (preg_match('~(.+)\..+~', $zz['table'], $db_name)) { // db_name is already in zz['table']
		$zz_conf['db_name'] = $db_name[1];
		$dbname = mysql_select_db($zz_conf['db_name']);
		if (!$dbname) {
			$zz_error[]['msg'] = mysql_error();
			echo zz_error($zz_error);
			exit;
			// TODO: throw critical exception instead, exit script
		}
	// 3. alternative: use current database
	} else {
		$result = mysql_query('SELECT DATABASE()');
		if (mysql_error()) {
			$zz_error[]['msg'] = mysql_error();
			echo zz_error($zz_error);
			exit;
		}
		$zz_conf['db_name'] = mysql_result($result, 0, 0);
	}
	if (!function_exists('datum_de')) include ($zz_conf['dir'].'/inc/numbers.inc.php');
	if (file_exists($zz_conf['dir'].'/inc/forcefilename-'.$zz_conf['character_set'].'.inc.php'))
		include_once($zz_conf['dir'].'/inc/forcefilename-'.$zz_conf['character_set'].'.inc.php');

	if ($zz_conf['debug']) 
		$zz['output'] .= zz_show_microtime('Dateien eingebunden, DB-Verbindung', $zz_timer);

//	required variables
	if (empty($zz_conf['db_name'])) {
		$zz_error[]['msg'] = 'Please set the variable <code>$zz_conf[\'db_name\']</code>. It has to be set to the main database name used for zzform.';
		$zz['output'] .= zz_error($zz_error);
		echo $zz['output'];
		exit;
	}

//	Variables

	if ($zz['mode'] != 'export') {
		$zz['output'].= '<div id="zzform">'."\n";
		$zz['output'].= zz_error($zz_error); // initialise zz_error
		if ($zz_conf['debug']) $zz['output'] .= '<h2>Attention: debug mode is on!</h2>';
	}	
//	URL parameter
	if (get_magic_quotes_gpc()) { // sometimes unwanted standard config
		$_POST = magic_quotes_strip($_POST);
		$_GET = magic_quotes_strip($_GET);
		$_FILES = magic_quotes_strip($_FILES);
		// _COOKIE and _REQUEST are not being used
	}
	
	if (isset($_GET['limit']) && is_numeric($_GET['limit']))	
		$zz_conf['this_limit'] = (int) $_GET['limit'];
	
	if (!isset($zz_conf['referer'])) {
		$zz_conf['referer'] = false;
		if (isset($_GET['referer'])) $zz_conf['referer'] = $_GET['referer'];
		if (isset($_POST['referer'])) $zz_conf['referer'] = $_POST['referer'];
	} elseif (isset($_POST['referer']))
		$zz_conf['referer'] = $_POST['referer'];
	elseif (isset($_SERVER['HTTP_REFERER']))
		$zz_conf['referer'] = $_SERVER['HTTP_REFERER'];
	$zz_conf['referer_esc'] = str_replace('&', '&amp;', $zz_conf['referer']);
		
	$zz_conf['heading'] = !isset($zz_conf['heading']) ? zz_form_heading($zz['table']) : $zz_conf['heading'];
	if ($zz_conf['multilang_fieldnames'])
		$zz_conf['heading'] = $text[$zz_conf['heading']];
	
	zz_fill_out($zz); // set type, title etc. where unset

	// Add with suggested values
	$zz_var['where'] = false;
	$zz_tab[0][0]['id']['where'] = false;
	$zz_tab[0][0]['id']['value'] = false;

	if (!empty($_GET['where'])) {
		$id_field_name = false;
		$unique_fields = array();
		foreach ($zz['fields'] as $field) {
			if ($field['type'] == 'id') {
				$id_field_name = $field['field_name'];
			}
			if (!empty($field['unique'])) {
				$unique_fields[$field['field_name']] = true;
			}
		}
		foreach ($_GET['where'] as $field_name => $value) {
			// check if field_name comprises table_name
			if (strstr($field_name, '.')) {
				$field_tab = explode('.', $field_name);
				$table_name = mysql_real_escape_string($field_tab[0]);
				$field_name = mysql_real_escape_string($field_tab[1]);
				unset($field_tab);
			} else {
				$table_name = $zz['table'];
				$field_name = mysql_real_escape_string($field_name);
			}
			$zz_var['where'][$table_name][$field_name] = $value;
			if ($field_name == $id_field_name) {
				$zz_tab[0][0]['id']['where'] = $field_name;
				$zz_tab[0][0]['id']['value'] = $value;
			} elseif (in_array($field_name, $unique_fields)) {
				$zz_tab[0][0]['id']['where'] = $id_field_name;
			}
			if (!empty($_GET['where'][$field_name])
				AND $_GET['where'][$field_name] == 'NULL')
				$zz['sql'] = zz_edit_sql($zz['sql'], 'WHERE', 
					'ISNULL('.$table_name.'.'.$field_name.')');
			else
				$zz['sql'] = zz_edit_sql($zz['sql'], 'WHERE', 
					$table_name.'.'.$field_name." = '"
					.mysql_real_escape_string($value)."'");
		}
		// in case where is not combined with ID field but UNIQUE field
		// (e. g. identifier with UNIQUE KEY) retrieve value for ID field from database
		if (!($zz_tab[0][0]['id']['value'])) {
			if ($zz_conf['debug_allsql']) 
				echo "<div>some main query:<br /><pre>".$zz['sql']."</pre></div>";

			$result = mysql_query($zz['sql']);
			if ($result) if (mysql_num_rows($result) == 1) {
				while ($line = mysql_fetch_array($result))
					if (isset($line[$zz_tab[0][0]['id']['where']]))
						$zz_tab[0][0]['id']['value'] = $line[$zz_tab[0][0]['id']['where']];
			}
			if (!$zz_tab[0][0]['id']['value']) $zz_tab[0][0]['id']['where'] = false;
		}
		// make nicer headings
		zz_nice_headings($zz['fields'], $zz_conf, $zz_error);
	}
	
	if ($zz_conf['access'] == 'add_then_edit') {
		if ($zz_tab[0][0]['id']['value']) {
			$zz_conf['access'] = 'edit_only';
			//if (!$zz[')
		} else $zz_conf['access'] = 'add_only';
	}
	
	
	if (!empty($_GET['group']))
		foreach ($zz['fields'] as $index => $field)
			if ((isset($field['display_field']) && $field['display_field'] == $_GET['group'])
				OR (isset($field['field_name']) && $field['field_name'] == $_GET['group'])
			) {
				if (isset($field['order'])) $zz_conf['group'] = $field['order'];
				else $zz_conf['group'] = $_GET['group'];
			}
	
//	page output

	$zz_conf['title'] = strip_tags($zz_conf['heading']);
	if ($zz['mode'] != 'export') {
		$zz['output'].= "\n".'<h2>'.$zz_conf['heading'].'</h2>'."\n\n";
		if (isset($zz_conf['heading_text'])) $zz['output'] .= $zz_conf['heading_text'];
		$zz['output'].= zz_error($zz_error);
		if ($zz_conf['selection'])
			$zz['output'].= "\n".'<h3>'.$zz_conf['selection'].'</h3>'."\n\n";
	}

//	process table description zz['fields']

	// ### check if there are any subtables, get ID field, check for upload fields ###
	$subqueries = '';
	$j = 1;
	$save_old_record = array();
	foreach (array_keys($zz['fields']) as $i) {
		if (isset($zz['fields'][$i]['type'])) {
			switch ($zz['fields'][$i]['type']) {
			case 'subtable':
				$subqueries[$j] = $i;
				$zz['fields'][$i]['subtable'] = $j;
				if (!isset($zz['fields'][$i]['table_name']))
					$zz['fields'][$i]['table_name'] = $zz['fields'][$i]['table'];
				$j++;
				if (!empty($zz['fields'][$i]['sql_not_unique'])) {
					$zz['fields'][$i]['access'] = 'show';	// must not change record where main record is not directly superior to detail record - foreign ID would be changed to main record's id
					$zz['fields'][$i]['keep_detailrecord_shown'] = true;
				}
				break;
			case 'id':
				$zz_tab[0][0]['id']['field_name'] = $zz['fields'][$i]['field_name'];
				break;
			case 'upload_image':
				$upload_form = true;
				break;
			case 'write_once':
			case 'display':
				$save_old_record[] = $i;
				break;
			}
		}
	}
	if (empty($upload_form)) unset($zz_conf['upload']); // values are not needed

	$zz['action'] = false;
	if ($zz['mode']) {
		if (($zz['mode'] == 'edit' OR $zz['mode'] == 'delete' OR $zz['mode'] == 'show')
			&& !$zz_tab[0][0]['id']['value'] && !empty($_GET['id']))
			$zz_tab[0][0]['id']['value'] = $_GET['id'];
	} else {
		if (isset($_POST['action']))
			$zz['action'] = $_POST['action'];
			if (isset($_POST[$zz_tab[0][0]['id']['field_name']]) && !$zz_tab[0][0]['id']['value'])
				$zz_tab[0][0]['id']['value'] = $_POST[$zz_tab[0][0]['id']['field_name']];
		if ($zz_conf['access'] == 'add_only' && empty($_POST)) 
			$zz['mode'] = 'add';
		elseif ($zz_conf['access'] == 'edit_only' && empty($_POST))
			$zz['mode'] = 'edit';
		elseif (!isset($_POST['action'])) $zz['mode'] = 'review';
	}

	// ### variables for main table will be saved in zz_tab[0]
	$zz_tab[0]['table'] = $zz['table'];
	$zz_tab[0]['sql'] = $zz['sql'].(!empty($zz['sqlorder']) ? $zz['sqlorder'] : '');

	// if there is a directory which has to be renamed, save old name in array
	// do the same if a file might be renamed, deleted ... via upload
	// or if there is a display or write_once field (so that it can be used
	// e. g. for identifiers):
	if (($zz['action'] == 'update' OR $zz['action'] == 'delete')) {
		if (!empty($zz_conf['folder']) OR !empty($upload_form) OR count($save_old_record))
			zz_foldercheck_before($zz_tab);
		if (count($save_old_record) && !empty($zz_tab[0][0]['old_record'])) {
			foreach ($save_old_record as $i) {
				if ($zz_tab[0][0]['old_record'][$zz['fields'][$i]['field_name']]) {
					$_POST[$zz['fields'][$i]['field_name']] = $zz_tab[0][0]['old_record'][$zz['fields'][$i]['field_name']];
				}
			}
		}
	}

	if (isset($_POST['subtables']))
		// not submit button but only add or remove form fields for subtable
		if ($zz['action'] == 'insert') {
			$zz['action'] = false;
			$zz['mode'] = 'add';
		} elseif ($zz['action'] == 'update') {
			$zz['action'] = false;
			$zz['mode'] = 'edit';
			$zz_tab[0][0]['id']['value'] = $_POST[$zz_tab[0][0]['id']['field_name']];
		}
	
	$zz_tab[0][0]['action'] = $zz['action'];
	
	// Turn off hierarchical sorting when using search
	// TODO: implement hierarchical view even when using search
	if (!empty($_GET['q']) AND $zz_conf['show_hierarchy']) {
		$zz_conf['show_hierarchy'] = false;
	}
	
	// Extra GET Parameter
	
	// TODO: http_build_query (PHP 5+)
	$extras = false;
	$zz['extraGET'] = false;
	if (!empty($_GET['where'])) 			$extras .= get_to_array($_GET['where']);
	if (!empty($_GET['order'])) 			$extras .= '&amp;order='.$_GET['order'];
	if (!empty($_GET['group'])) 			$extras .= '&amp;group='.$_GET['group'];
	if (!empty($_GET['q'])) 				$extras .= '&amp;q='.urlencode($_GET['q']);
	if (!empty($_GET['scope'])) 			$extras .= '&amp;scope='.$_GET['scope'];
	if (!empty($_GET['dir'])) 				$extras .= '&amp;dir='.$_GET['dir'];
	if (!empty($_GET['var'])) 				$extras .= get_to_array($_GET['var']);
	if ($zz_conf['this_limit'] && $zz_conf['this_limit'] != $zz_conf['limit'])
											$extras.= '&amp;limit='.$zz_conf['this_limit'];
	if ($zz_conf['referer']) 				$extras.= '&amp;referer='.urlencode($zz_conf['referer']);
	if (isset($_GET['nolist'])) 			$extras .= '&amp;nolist';
	if (isset($_GET['url'])) 				$extras .= '&amp;url='.urlencode($_GET['url']);
	if ($extras)
		if (substr($extras, 0, 1) == '&') $extras = substr($extras, 5);
		 else $extras = substr($extras, 1); 
											// first ? or & to be added as needed!
	if ($extras) 							$zz['extraGET'] = '&amp;'.$extras;

	if ($zz['mode'] != 'export') {
		if ($zz_conf['access'] == 'show') {
			$zz_conf['add'] = false;
			$zz_conf['edit'] = false;
			$zz_conf['delete'] = false;
			$zz_conf['view'] = true;
			if ($zz['mode'] == 'edit' OR $zz['mode'] == 'delete') {
				$zz['mode'] = 'show';
			} elseif ($zz['mode'] == 'add')
				$zz['mode'] = false;
		} elseif ($zz_conf['access'] == 'show_and_delete') {
			$zz_conf['add'] = false;
			$zz_conf['edit'] = false;
			$zz_conf['view'] = true;
			if ($zz['mode'] == 'edit') {
				$zz['mode'] = 'show';
			} elseif ($zz['mode'] == 'add')
				$zz['mode'] = false;
		} elseif ($zz_conf['access'] == 'add_only') { // show only form, nothing else
			$zz_conf['delete'] = false;
			$zz_conf['search'] = false;
			$zz_conf['show_list'] = false;
			$zz_conf['show_output'] = false;
			$zz_conf['add'] = false;
			if ($zz['mode'] == 'edit' OR $zz['mode'] == 'delete') {
				$zz['mode'] = 'add';
			}
		} elseif ($zz_conf['access'] == 'edit_only') {
			$zz_conf['add'] = false;
			$zz_conf['delete'] = false;
			$zz_conf['limit'] = false;
			$zz_conf['search'] = false;
			$zz_conf['show_list'] = false;
			if ($zz['mode'] == 'delete') $zz['mode'] = 'edit';
			elseif ($zz['mode'] == 'add') $zz['mode'] = false;

		} elseif ($zz_conf['access'] == 'edit_details_only') {
			$zz_conf['delete'] = false;
			$zz_conf['add'] = false;
			if ($zz['mode'] == 'delete') $zz['mode'] = 'edit';
			elseif ($zz['mode'] == 'add') $zz['mode'] = false;

		} elseif ($zz_conf['access'] == 'none') {
			$zz_conf['add'] = false;
			$zz_conf['edit'] = false;
			$zz_conf['delete'] = false;
			$zz_conf['view'] = false;
			if ($zz['mode'] == 'edit' OR $zz['mode'] == 'delete') {
				$zz['mode'] = 'show';
			} elseif ($zz['mode'] == 'add')
				$zz['mode'] = false;
		}
		if ((!$zz_conf['delete'] && $zz['mode'] == 'delete') // protection from URL manipulation
			OR (!$zz_conf['edit'] && $zz['mode'] == 'edit')) {
			$zz['mode'] = 'show';
		} //elseif (!$zz_conf['add'] && $zz['mode'] == 'add') {
		//	$zz['mode'] = false;
		//}
	} else {
		$zz_conf['this_limit'] = false; 		// always export all records
	}
	
	if ($zz['mode'] == 'export') {
		$zz['filetype'] = $zz_conf['export_filetypes'][0]; // default filetype for export
		if (!empty($_GET['export'])) { // get filetype for export
			if (in_array($_GET['export'], $zz_conf['export_filetypes']))
				$zz['filetype'] = $_GET['export'];
		} elseif (!empty($_GET['filetype'])) // get filetype for export
			if (in_array($_GET['filetype'], $zz_conf['export_filetypes']))
				$zz['filetype'] = $_GET['filetype'];
	}

//	Add, Update or Delete
	
//	zz_fill_out

	// ### variables for main table will be saved in zz_tab[0]
	$zz_tab[0][0]['fields'] = $zz['fields'];
	$zz_tab[0][0]['validation'] = true;
	$zz_tab[0][0]['record'] = false;
	if ($_POST) $zz_tab[0][0]['POST'] = $_POST;
	$zz_tab[0][0]['access'] = false;
	if ($zz_conf['access'] == 'edit_details_only')
		$zz_tab[0][0]['access'] = 'show';
	
	$validation = true;
	
	//	### put each table (if more than one) into one array of its own ###
	zz_get_subqueries($subqueries, $zz, $zz_tab, $zz_conf);
	if ($subqueries && $zz['action'] != 'delete')
		if (isset($_POST['subtables'])) $validation = false;
	
	$zz['sql'] = zz_search_sql($zz['fields'], $zz['sql'], $zz['table']);	// if q modify $zz['sql']: add search query
	$zz['sql'].= ' '.$zz['sqlorder']; 									// must be here because of where-clause
	$zz['formhead'] = false;
	
	if ($zz['action'] == 'insert' OR $zz['action'] == 'update' OR $zz['action'] == 'delete')
		zz_action($zz_tab, $zz_conf, $zz, $validation, $upload_form, $subqueries); // check for validity, insert/update/delete record

//	Query Updated, Added or Editable Record
	
	if (!$validation) {
		if ($zz['action'] == 'update') $zz['mode'] = 'edit';
		elseif ($zz['action'] == 'insert') $zz['mode'] = 'add';
		zz_get_subqueries($subqueries, $zz, $zz_tab, $zz_conf);
	}

//	Display Updated, Added or Editable Record
	
	// Query for table below record and for value = increment
	// moved to end
	
	$no_record_form = array('review', 'export');
	
	if ($zz['mode'] && !in_array($zz['mode'], $no_record_form)) {
	//	mode = add | edit | delete: show form
		if ($zz['mode'] == 'delete' OR $zz['mode'] == 'show') $display = 'review';
		else $display = 'form';
		if ($zz['mode'] != 'show') {
			$zz['output'].= '<form action="'.$zz_conf['url_self'];
			if ($extras) $zz['output'].= $zz_var['url_append'].$extras;
			$zz['output'].= '" method="POST"';
			if (!empty($upload_form)) $zz['output'] .= ' enctype="multipart/form-data"';
			$zz['output'].= '>';
		}
		$zz['formhead'] = $text[$zz['mode']].' '.$text['a_record'];
	} elseif ($zz['action']) {	
	//	action = insert update review: show form with new values
		if ($zz['action'] == 'delete') $display = false;
		else $display = 'review';
		if (!$zz['formhead']) {
			$zz['formhead'] = ucfirst($text[$zz['action']].' '.$text['failed']);
			$display = false;
		}
		if (!empty($zz['no-delete'])) {
			$zz['formhead'] = $text['warning'].'!';
			foreach ($zz['no-delete'] as $tab) {
				$tab = explode(',', $tab);
				$no_delete_reason = $zz_tab[$tab[0]][$tab[1]]['no-delete'];
				$tmp_error_msg = '<p>'
					.$text['This record could not be deleted because there are details about this record in other records.']
					.' '.$no_delete_reason['text'].'</p>'."\n";
				if (isset($no_delete_reason['fields'])) {
					$tmp_error_msg .= '<ul>'."\n";
					foreach ($no_delete_reason['fields'] as $del_tab) {
						if ($zz_conf['prefix']) { // makes the response look nicer
							if (strtolower(substr($del_tab, 0, strlen($zz_conf['prefix']))) == strtolower($zz_conf['prefix']))
								$del_tab = substr($del_tab, strlen($zz_conf['prefix']));
							else echo substr($del_tab, 0, strlen($zz_conf['prefix']));
						}
						$del_tab = ucfirst($del_tab);
						$tmp_error_msg .= '<li>'.$del_tab.'</li>'."\n";
					}
					$tmp_error_msg .= '</ul>'."\n";
				} 
				$zz_error[]['msg'] = $tmp_error_msg;
			}
		}
	} elseif ($zz['mode'] == 'review' && $zz_tab[0][0]['id']['where']) {
		$display = 'review';
		$zz['formhead'] = $text['show_record'];
	//
		if ($zz_conf['debug_allsql']) echo "<div>some other very important query:<br /><pre>".$zz['sql']."</pre></div>";
		$result = mysql_query($zz['sql']);
		if ($result) 
			if (mysql_num_rows($result) == 1) {
				$zz_tab[0][0]['record'] = mysql_fetch_assoc($result);
				$zz_tab[0][0]['id']['value'] = $zz_tab[0][0]['record'][$zz_tab[0][0]['id']['where']];
			} else
				$zz_error[]['msg'] = $text['Database error. This database has ambiguous values in ID field.'];
	//
	} else
		$display = false;
	
	if ($zz_tab[0][0]['id']['where']) { // ??? in case of where and not unique, ie. only one record in table, don't do this.
		$zz_conf['show_list'] = false;		// don't show table
		$zz_conf['add'] = false;			// don't show add new record
	}
	
	if ($zz_conf['debug']) 
		$zz['output'] .= zz_show_microtime('DB Operations over', $zz_timer);
	
	foreach (array_keys($zz_tab) as $i)
		foreach (array_keys($zz_tab[$i]) as $k)
			if (is_numeric($k))
				$zz_tab[$i][$k] = zz_requery_record($zz_tab[$i][$k], $validation, $zz_tab[$i]['sql'], $zz_tab[$i]['table'], $zz['mode']);

			// requery record if successful, 
	if (($zz['mode'] == 'edit' OR $zz['mode'] == 'delete') AND !$zz_tab[0][0]['record']) {
		$zz['formhead'] = '<span class="error">'.$text['There is no record under this ID:'].' '.htmlspecialchars($zz_tab[0][0]['id']['value']).'</span>';	
		$display = false;
	}
	$result = mysql_query($zz['sql']);  // must be behind update, insert etc. or it will return the wrong number
	if ($result) $zz_lines = mysql_num_rows($result);
	else $zz_lines = 0;
	
	$zz['output'] .= zz_display_records($zz, $zz_tab, $zz_conf, $display, $zz_var);

	if ($zz['mode'] && !in_array($zz['mode'], $no_record_form) && $zz['mode'] != 'show')
		$zz['output'].= "</form>\n";
	if ($zz['mode'] != 'add' && $zz['mode'] != 'export' && $zz_conf['add'])
		$zz['output'].= '<p class="add-new"><a accesskey="n" href="'.$zz_conf['url_self'].$zz_var['url_append'].'mode=add'.$zz['extraGET'].'">'.$text['add_new_record'].'</a></p>'."\n";
	if ($zz['mode'] != 'export' && $zz_conf['backlink']) {
		if (!empty($zz_conf['dynamic_referer']))
			$zz['output'].= '<p id="back-overview"><a href="'
				.zz_makepath($zz_conf['dynamic_referer'], $zz_tab, 'new', 'local')
				.'">'.$text['back-to-overview'].'</a></p>'."\n";
		elseif ($zz_conf['referer'])
			$zz['output'].= '<p id="back-overview"><a href="'.$zz_conf['referer_esc'].'">'.$text['back-to-overview'].'</a></p>'."\n";
	}
	
	$zz['sql'] = zz_sql_order($zz['fields'], $zz['sql']); // Alter SQL query if GET order (AND maybe GET dir) are set

	if ($zz_conf['show_list']) {
		zz_display_table($zz, $zz_conf, $zz_error, $zz_var, $zz_lines, $zz_tab[0][0]['id']['field_name']); 
		// shows table with all records (limited by zz_conf['limit'])
		// and add/nav if limit/search buttons
	}

	if ($zz['mode'] != 'export') {
		if ($zz_conf['footer_text']) $zz['output'].= $zz_conf['footer_text'];
		 $zz['output'].= '</div>';
	}
	// Redirect, if wanted.
	if ($zz['result'])
		if (!empty($zz_conf['redirect'][$zz['result']])) {
			if (substr($zz_conf['redirect'][$zz['result']], 0, 1) == '/') {
				$scheme = ((isset($_SERVER['HTTPS']) AND $_SERVER['HTTPS'] == "on") ? 'https' : 'http');
				$zz_conf['redirect'][$zz['result']] = $scheme.'://'.$_SERVER['SERVER_NAME'].$zz_conf['redirect'][$zz['result']];
			}
			header('Location: '.$zz_conf['redirect'][$zz['result']]);
			exit;
		}
	if ($zz_conf['debug']) 
		$zz['output'] .= zz_show_microtime('Finished', $zz_timer);
	if ($zz_conf['show_output']) echo $zz['output'];
}

function zzform_all($glob_vals = false) {
//	Die folgenden globalen Definitionen der Variablen sind nur noetig, wenn man wie
//	hier die darauffolgenden vier Zeilen in einer Funktion zusammenfassen will
	global $zz;			// Table description
	global $zz_conf;	// Config variables
	global $zz_tab;		// Table values, generated by zzform()
	global $zz_page;	// Page (Layout) variables
	if ($glob_vals)		// Further variables, may be set by user
		if (is_array($glob_vals))
			foreach ($glob_vals as $glob_val)
				global $$glob_val;
		else
			global $$glob_vals;
	$zz_conf['show_output'] = false; // do not show output as it will be included after page head
	
//	Zusammenbasteln der Seite
	zzform();					// Funktion aufrufen
	if ($zz['mode'] == 'export') {
		foreach ($zz['headers'] as $index) {
			foreach ($index as $bool => $header) {
				header($header, $bool);
			}
		}
		echo $zz['output'];			// Output der Funktion ausgeben
	} else {
		if (empty($zz_page['title'])) $zz_page['title'] = $zz_conf['title'];
		include($zz_page['head']);	// Seitenkopf ausgeben, teilw. mit Variablen aus Funktion
		echo $zz['output'];			// Output der Funktion ausgeben
		include($zz_page['foot']);	// Seitenfuss ausgeben
	}
}

function microtime_float() {
    list($usec, $sec) = explode(" ", microtime());
    return ((float)$usec + (float)$sec);
}

function zz_show_microtime($pos, $zz_timer) {
	return $string = '<p>Verbrauchte Zeit Start - '.$pos.': '
			.(microtime_float() - $zz_timer).'</p>';

}

?>